<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="jz.cdgy.mbg.mapper.StandardMapper">
  <resultMap id="BaseResultMap" type="jz.cdgy.mbg.pojo.Standard">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="standard_name" jdbcType="VARCHAR" property="standardName" />
    <result column="standard_type" jdbcType="VARCHAR" property="standardType" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="is_valid" jdbcType="TINYINT" property="isValid" />
    <result column="reward_content" jdbcType="VARCHAR" property="rewardContent" />
    <result column="reward_describe" jdbcType="VARCHAR" property="rewardDescribe" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, standard_name, standard_type, create_time, update_time, is_valid, reward_content, 
    reward_describe
  </sql>
  <select id="selectByExample" parameterType="jz.cdgy.mbg.pojo.StandardExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_standard
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_standard
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_standard
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="jz.cdgy.mbg.pojo.StandardExample">
    delete from t_standard
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="jz.cdgy.mbg.pojo.Standard">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_standard (standard_name, standard_type, create_time, 
      update_time, is_valid, reward_content, 
      reward_describe)
    values (#{standardName,jdbcType=VARCHAR}, #{standardType,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{isValid,jdbcType=TINYINT}, #{rewardContent,jdbcType=VARCHAR}, 
      #{rewardDescribe,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="jz.cdgy.mbg.pojo.Standard">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_standard
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="standardName != null">
        standard_name,
      </if>
      <if test="standardType != null">
        standard_type,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="isValid != null">
        is_valid,
      </if>
      <if test="rewardContent != null">
        reward_content,
      </if>
      <if test="rewardDescribe != null">
        reward_describe,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="standardName != null">
        #{standardName,jdbcType=VARCHAR},
      </if>
      <if test="standardType != null">
        #{standardType,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isValid != null">
        #{isValid,jdbcType=TINYINT},
      </if>
      <if test="rewardContent != null">
        #{rewardContent,jdbcType=VARCHAR},
      </if>
      <if test="rewardDescribe != null">
        #{rewardDescribe,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="jz.cdgy.mbg.pojo.StandardExample" resultType="java.lang.Long">
    select count(*) from t_standard
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_standard
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.standardName != null">
        standard_name = #{record.standardName,jdbcType=VARCHAR},
      </if>
      <if test="record.standardType != null">
        standard_type = #{record.standardType,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isValid != null">
        is_valid = #{record.isValid,jdbcType=TINYINT},
      </if>
      <if test="record.rewardContent != null">
        reward_content = #{record.rewardContent,jdbcType=VARCHAR},
      </if>
      <if test="record.rewardDescribe != null">
        reward_describe = #{record.rewardDescribe,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_standard
    set id = #{record.id,jdbcType=INTEGER},
      standard_name = #{record.standardName,jdbcType=VARCHAR},
      standard_type = #{record.standardType,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      is_valid = #{record.isValid,jdbcType=TINYINT},
      reward_content = #{record.rewardContent,jdbcType=VARCHAR},
      reward_describe = #{record.rewardDescribe,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="jz.cdgy.mbg.pojo.Standard">
    update t_standard
    <set>
      <if test="standardName != null">
        standard_name = #{standardName,jdbcType=VARCHAR},
      </if>
      <if test="standardType != null">
        standard_type = #{standardType,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isValid != null">
        is_valid = #{isValid,jdbcType=TINYINT},
      </if>
      <if test="rewardContent != null">
        reward_content = #{rewardContent,jdbcType=VARCHAR},
      </if>
      <if test="rewardDescribe != null">
        reward_describe = #{rewardDescribe,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="jz.cdgy.mbg.pojo.Standard">
    update t_standard
    set standard_name = #{standardName,jdbcType=VARCHAR},
      standard_type = #{standardType,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      is_valid = #{isValid,jdbcType=TINYINT},
      reward_content = #{rewardContent,jdbcType=VARCHAR},
      reward_describe = #{rewardDescribe,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>