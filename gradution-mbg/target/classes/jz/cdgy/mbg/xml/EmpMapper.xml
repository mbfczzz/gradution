<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="jz.cdgy.mbg.mapper.EmpMapper">
  <resultMap id="BaseResultMap" type="jz.cdgy.mbg.pojo.Emp">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="emp_name" jdbcType="VARCHAR" property="empName" />
    <result column="emp_address" jdbcType="VARCHAR" property="empAddress" />
    <result column="emp_phone" jdbcType="VARCHAR" property="empPhone" />
    <result column="emp_wx" jdbcType="VARCHAR" property="empWx" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="leave_time" jdbcType="TIMESTAMP" property="leaveTime" />
    <result column="is_leave" jdbcType="TINYINT" property="isLeave" />
    <result column="emp_email" jdbcType="VARCHAR" property="empEmail" />
    <result column="emp_position" jdbcType="INTEGER" property="empPosition" />
    <result column="emp_department" jdbcType="INTEGER" property="empDepartment" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, emp_name, emp_address, emp_phone, emp_wx, create_time, update_time, leave_time,
    is_leave, emp_email, emp_position, emp_department
  </sql>
  <select id="selectByExample" parameterType="jz.cdgy.mbg.pojo.EmpExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_emp
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_emp
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_emp
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="jz.cdgy.mbg.pojo.EmpExample">
    delete from t_emp
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="jz.cdgy.mbg.pojo.Emp">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_emp (emp_name, emp_address, emp_phone,
    emp_wx, create_time, update_time,
    leave_time, is_leave, emp_email,
    emp_position, emp_department)
    values (#{empName,jdbcType=VARCHAR}, #{empAddress,jdbcType=VARCHAR}, #{empPhone,jdbcType=VARCHAR},
    #{empWx,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP},
    #{leaveTime,jdbcType=TIMESTAMP}, #{isLeave,jdbcType=TINYINT}, #{empEmail,jdbcType=VARCHAR},
    #{empPosition,jdbcType=INTEGER}, #{empDepartment,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="jz.cdgy.mbg.pojo.Emp">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_emp
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="empName != null">
        emp_name,
      </if>
      <if test="empAddress != null">
        emp_address,
      </if>
      <if test="empPhone != null">
        emp_phone,
      </if>
      <if test="empWx != null">
        emp_wx,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="leaveTime != null">
        leave_time,
      </if>
      <if test="isLeave != null">
        is_leave,
      </if>
      <if test="empEmail != null">
        emp_email,
      </if>
      <if test="empPosition != null">
        emp_position,
      </if>
      <if test="empDepartment != null">
        emp_department,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="empName != null">
        #{empName,jdbcType=VARCHAR},
      </if>
      <if test="empAddress != null">
        #{empAddress,jdbcType=VARCHAR},
      </if>
      <if test="empPhone != null">
        #{empPhone,jdbcType=VARCHAR},
      </if>
      <if test="empWx != null">
        #{empWx,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="leaveTime != null">
        #{leaveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isLeave != null">
        #{isLeave,jdbcType=TINYINT},
      </if>
      <if test="empEmail != null">
        #{empEmail,jdbcType=VARCHAR},
      </if>
      <if test="empPosition != null">
        #{empPosition,jdbcType=INTEGER},
      </if>
      <if test="empDepartment != null">
        #{empDepartment,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="jz.cdgy.mbg.pojo.EmpExample" resultType="java.lang.Long">
    select count(*) from t_emp
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
    <update id="updateByExampleSelective" parameterType="map">
    update t_emp
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.empName != null">
        emp_name = #{record.empName,jdbcType=VARCHAR},
      </if>
      <if test="record.empAddress != null">
        emp_address = #{record.empAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.empPhone != null">
        emp_phone = #{record.empPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.empWx != null">
        emp_wx = #{record.empWx,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.leaveTime != null">
        leave_time = #{record.leaveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isLeave != null">
        is_leave = #{record.isLeave,jdbcType=TINYINT},
      </if>
      <if test="record.empEmail != null">
        emp_email = #{record.empEmail,jdbcType=VARCHAR},
      </if>
      <if test="record.empPosition != null">
        emp_position = #{record.empPosition,jdbcType=INTEGER},
      </if>
      <if test="record.empDepartment != null">
        emp_department = #{record.empDepartment,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_emp
    set id = #{record.id,jdbcType=INTEGER},
    emp_name = #{record.empName,jdbcType=VARCHAR},
    emp_address = #{record.empAddress,jdbcType=VARCHAR},
    emp_phone = #{record.empPhone,jdbcType=VARCHAR},
    emp_wx = #{record.empWx,jdbcType=VARCHAR},
    create_time = #{record.createTime,jdbcType=TIMESTAMP},
    update_time = #{record.updateTime,jdbcType=TIMESTAMP},
    leave_time = #{record.leaveTime,jdbcType=TIMESTAMP},
    is_leave = #{record.isLeave,jdbcType=TINYINT},
    emp_email = #{record.empEmail,jdbcType=VARCHAR},
    emp_position = #{record.empPosition,jdbcType=INTEGER},
    emp_department = #{record.empDepartment,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="jz.cdgy.mbg.pojo.Emp">
    update t_emp
    <set>
      <if test="empName != null">
        emp_name = #{empName,jdbcType=VARCHAR},
      </if>
      <if test="empAddress != null">
        emp_address = #{empAddress,jdbcType=VARCHAR},
      </if>
      <if test="empPhone != null">
        emp_phone = #{empPhone,jdbcType=VARCHAR},
      </if>
      <if test="empWx != null">
        emp_wx = #{empWx,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="leaveTime != null">
        leave_time = #{leaveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isLeave != null">
        is_leave = #{isLeave,jdbcType=TINYINT},
      </if>
      <if test="empEmail != null">
        emp_email = #{empEmail,jdbcType=VARCHAR},
      </if>
      <if test="empPosition != null">
        emp_position = #{empPosition,jdbcType=INTEGER},
      </if>
      <if test="empDepartment != null">
        emp_department = #{empDepartment,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="jz.cdgy.mbg.pojo.Emp">
    update t_emp
    set emp_name = #{empName,jdbcType=VARCHAR},
        emp_address = #{empAddress,jdbcType=VARCHAR},
        emp_phone = #{empPhone,jdbcType=VARCHAR},
        emp_wx = #{empWx,jdbcType=VARCHAR},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        update_time = #{updateTime,jdbcType=TIMESTAMP},
        leave_time = #{leaveTime,jdbcType=TIMESTAMP},
        is_leave = #{isLeave,jdbcType=TINYINT},
        emp_email = #{empEmail,jdbcType=VARCHAR},
        emp_position = #{empPosition,jdbcType=INTEGER},
        emp_department = #{empDepartment,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="getOneEmpById" resultType="jz.cdgy.mbg.pojo.Emp">
    SELECT
      t_emp.id,
      emp_name,
      emp_address,
      emp_phone,
      emp_wx,
      t_emp.create_time,
      t_emp.update_time,
      leave_time,
      is_leave,
      emp_email,
      emp_position,
      emp_department,
      t_position.position_name,
      t_department.department_name
    FROM
      t_emp
        INNER JOIN t_position ON t_emp.emp_position = t_position.id
        INNER JOIN t_department ON t_emp.emp_department = t_department.id
    WHERE
      t_emp.id =#{id}
  </select>
</mapper>