<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="jz.cdgy.mbg.mapper.RecruitRuleMapper">
  <resultMap id="BaseResultMap" type="jz.cdgy.mbg.pojo.RecruitRule">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="recruit_id" jdbcType="INTEGER" property="recruitId" />
    <result column="rule_id" jdbcType="INTEGER" property="ruleId" />
    <result column="is_valid" jdbcType="TINYINT" property="isValid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, recruit_id, rule_id, is_valid
  </sql>
  <select id="selectByExample" parameterType="jz.cdgy.mbg.pojo.RecruitRuleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_recruit_rule
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_recruit_rule
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_recruit_rule
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="jz.cdgy.mbg.pojo.RecruitRuleExample">
    delete from t_recruit_rule
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="jz.cdgy.mbg.pojo.RecruitRule">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_recruit_rule (recruit_id, rule_id, is_valid
      )
    values (#{recruitId,jdbcType=INTEGER}, #{ruleId,jdbcType=INTEGER}, #{isValid,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="jz.cdgy.mbg.pojo.RecruitRule">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_recruit_rule
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="recruitId != null">
        recruit_id,
      </if>
      <if test="ruleId != null">
        rule_id,
      </if>
      <if test="isValid != null">
        is_valid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="recruitId != null">
        #{recruitId,jdbcType=INTEGER},
      </if>
      <if test="ruleId != null">
        #{ruleId,jdbcType=INTEGER},
      </if>
      <if test="isValid != null">
        #{isValid,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
    <select id="countByExample" parameterType="jz.cdgy.mbg.pojo.RecruitRuleExample" resultType="java.lang.Long">
    select count(*) from t_recruit_rule
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_recruit_rule
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.recruitId != null">
        recruit_id = #{record.recruitId,jdbcType=INTEGER},
      </if>
      <if test="record.ruleId != null">
        rule_id = #{record.ruleId,jdbcType=INTEGER},
      </if>
      <if test="record.isValid != null">
        is_valid = #{record.isValid,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_recruit_rule
    set id = #{record.id,jdbcType=INTEGER},
      recruit_id = #{record.recruitId,jdbcType=INTEGER},
      rule_id = #{record.ruleId,jdbcType=INTEGER},
      is_valid = #{record.isValid,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="jz.cdgy.mbg.pojo.RecruitRule">
    update t_recruit_rule
    <set>
      <if test="recruitId != null">
        recruit_id = #{recruitId,jdbcType=INTEGER},
      </if>
      <if test="ruleId != null">
        rule_id = #{ruleId,jdbcType=INTEGER},
      </if>
      <if test="isValid != null">
        is_valid = #{isValid,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="jz.cdgy.mbg.pojo.RecruitRule">
    update t_recruit_rule
    set recruit_id = #{recruitId,jdbcType=INTEGER},
      rule_id = #{ruleId,jdbcType=INTEGER},
      is_valid = #{isValid,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <insert id="insertRecruit">
    insert into t_recruit_rule
    (recruit_id, rule_id, is_valid)
    values
    <foreach collection="ruleStr.split(',')" item="rid"  separator=",">
    (#{id},#{rid},1)
    </foreach>
  </insert>
</mapper>