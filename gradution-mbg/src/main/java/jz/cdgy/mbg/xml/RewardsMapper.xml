<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="jz.cdgy.mbg.mapper.RewardsMapper">
  <resultMap id="BaseResultMap" type="jz.cdgy.mbg.pojo.Rewards">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="emp_id" jdbcType="INTEGER" property="empId" />
    <result column="reward_time" jdbcType="TIMESTAMP" property="rewardTime" />
    <result column="reward_content" jdbcType="VARCHAR" property="rewardContent" />
    <result column="reward_standard" jdbcType="INTEGER" property="rewardStandard" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, emp_id, reward_time, reward_content, reward_standard
  </sql>
  <select id="selectByExample" parameterType="jz.cdgy.mbg.pojo.RewardsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_rewards
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_rewards
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_rewards
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="jz.cdgy.mbg.pojo.RewardsExample">
    delete from t_rewards
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="jz.cdgy.mbg.pojo.Rewards">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_rewards (emp_id, reward_time, reward_content, 
      reward_standard)
    values (#{empId,jdbcType=INTEGER}, #{rewardTime,jdbcType=TIMESTAMP}, #{rewardContent,jdbcType=VARCHAR}, 
      #{rewardStandard,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="jz.cdgy.mbg.pojo.Rewards">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_rewards
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="empId != null">
        emp_id,
      </if>
      <if test="rewardTime != null">
        reward_time,
      </if>
      <if test="rewardContent != null">
        reward_content,
      </if>
      <if test="rewardStandard != null">
        reward_standard,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="empId != null">
        #{empId,jdbcType=INTEGER},
      </if>
      <if test="rewardTime != null">
        #{rewardTime,jdbcType=TIMESTAMP},
      </if>
      <if test="rewardContent != null">
        #{rewardContent,jdbcType=VARCHAR},
      </if>
      <if test="rewardStandard != null">
        #{rewardStandard,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="jz.cdgy.mbg.pojo.RewardsExample" resultType="java.lang.Long">
    select count(*) from t_rewards
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_rewards
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.empId != null">
        emp_id = #{record.empId,jdbcType=INTEGER},
      </if>
      <if test="record.rewardTime != null">
        reward_time = #{record.rewardTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.rewardContent != null">
        reward_content = #{record.rewardContent,jdbcType=VARCHAR},
      </if>
      <if test="record.rewardStandard != null">
        reward_standard = #{record.rewardStandard,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_rewards
    set id = #{record.id,jdbcType=INTEGER},
      emp_id = #{record.empId,jdbcType=INTEGER},
      reward_time = #{record.rewardTime,jdbcType=TIMESTAMP},
      reward_content = #{record.rewardContent,jdbcType=VARCHAR},
      reward_standard = #{record.rewardStandard,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="jz.cdgy.mbg.pojo.Rewards">
    update t_rewards
    <set>
      <if test="empId != null">
        emp_id = #{empId,jdbcType=INTEGER},
      </if>
      <if test="rewardTime != null">
        reward_time = #{rewardTime,jdbcType=TIMESTAMP},
      </if>
      <if test="rewardContent != null">
        reward_content = #{rewardContent,jdbcType=VARCHAR},
      </if>
      <if test="rewardStandard != null">
        reward_standard = #{rewardStandard,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="jz.cdgy.mbg.pojo.Rewards">
    update t_rewards
    set emp_id = #{empId,jdbcType=INTEGER},
      reward_time = #{rewardTime,jdbcType=TIMESTAMP},
      reward_content = #{rewardContent,jdbcType=VARCHAR},
      reward_standard = #{rewardStandard,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="getAllRewards" resultType="jz.cdgy.mbg.pojo.Rewards">
    select
    t_rewards.id,
    t_emp.emp_name,
    t_rewards.emp_id,
    t_position.position_name,
    t_department.department_name,
    t_emp.emp_phone,
    t_rewards.reward_time,
    t_rewards.reward_content,
    t_rewards.reward_standard,
    ifnull(t_standard.standard_name,'自定义模板') as 'standard_name'
    from t_rewards
    inner join t_emp on t_emp.id = t_rewards.emp_id
    inner join t_position on t_position.id = t_emp.emp_position
    inner join t_department on t_department.id = t_emp.emp_department
    left join t_standard on t_standard.id = t_rewards.reward_standard
    <where>
      <if test="empName!=null and empName!=''">
        and t_emp.emp_name like concat('%',#{empName,jdbcType=VARCHAR},'%')
      </if>
      <if test="positionName!=null and positionName!=''">
        and t_position.id in
        <foreach item="id" collection='positionName.split(",")' open="(" separator="," close=")">
          #{id}
        </foreach>
      </if>
      <if test="departmentName!=null and departmentName!=''">
        and t_department.id in
        <foreach item="id" collection='departmentName.split(",")' open="(" separator="," close=")">
          #{id}
        </foreach>
      </if>
      <if test="standardName!=null and standardName!=''">
        and t_rewards.reward_standard in
        <foreach item="id" collection='standardName.split(",")' open="(" separator="," close=")">
          #{id}
        </foreach>
      </if>
      <if test="empPhone!=null and empPhone!=''">
        and t_emp.emp_phone like concat('%',#{empPhone,jdbcType=VARCHAR},'%')
      </if>
      <if test="rewardContent!=null and rewardContent!=''">
        and t_rewards.reward_content like concat('%',#{rewardContent,jdbcType=VARCHAR},'%')
      </if>
      <if test="rewardTimeStr!=null and rewardTimeStr!=''">
        and  DATE_FORMAT(reward_time,'%Y-%m-%d')
        between DATE_FORMAT(reward_time,SUBSTRING_INDEX(#{rewardTimeStr,jdbcType=VARCHAR},",",1))
        and  DATE_FORMAT(reward_time,SUBSTRING_INDEX(#{rewardTimeStr,jdbcType=VARCHAR},",",-1))
      </if>
    </where>
  </select>

</mapper>