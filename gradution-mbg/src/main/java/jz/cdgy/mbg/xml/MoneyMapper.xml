<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="jz.cdgy.mbg.mapper.MoneyMapper">
  <resultMap id="BaseResultMap" type="jz.cdgy.mbg.pojo.Money">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="emp_name" jdbcType="VARCHAR" property="empName" />
    <result column="status_id" jdbcType="INTEGER" property="statusId" />
    <result column="emp_money" jdbcType="DECIMAL" property="empMoney" />
    <result column="money_describe" jdbcType="VARCHAR" property="moneyDescribe" />
    <result column="refund_way" jdbcType="INTEGER" property="refundWay" />
    <result column="money_item" jdbcType="INTEGER" property="moneyItem" />
    <result column="send_time" jdbcType="TIMESTAMP" property="sendTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, emp_name, status_id, emp_money, money_describe, refund_way, money_item, send_time
  </sql>
  <select id="selectByExample" parameterType="jz.cdgy.mbg.pojo.MoneyExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_money
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_money
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_money
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="jz.cdgy.mbg.pojo.MoneyExample">
    delete from t_money
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="jz.cdgy.mbg.pojo.Money">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_money (emp_name, status_id, emp_money, 
      money_describe, refund_way, money_item, 
      send_time)
    values (#{empName,jdbcType=VARCHAR}, #{statusId,jdbcType=INTEGER}, #{empMoney,jdbcType=DECIMAL}, 
      #{moneyDescribe,jdbcType=VARCHAR}, #{refundWay,jdbcType=INTEGER}, #{moneyItem,jdbcType=INTEGER}, 
      #{sendTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="jz.cdgy.mbg.pojo.Money">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_money
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="empName != null">
        emp_name,
      </if>
      <if test="statusId != null">
        status_id,
      </if>
      <if test="empMoney != null">
        emp_money,
      </if>
      <if test="moneyDescribe != null">
        money_describe,
      </if>
      <if test="refundWay != null">
        refund_way,
      </if>
      <if test="moneyItem != null">
        money_item,
      </if>
      <if test="sendTime != null">
        send_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="empName != null">
        #{empName,jdbcType=VARCHAR},
      </if>
      <if test="statusId != null">
        #{statusId,jdbcType=INTEGER},
      </if>
      <if test="empMoney != null">
        #{empMoney,jdbcType=DECIMAL},
      </if>
      <if test="moneyDescribe != null">
        #{moneyDescribe,jdbcType=VARCHAR},
      </if>
      <if test="refundWay != null">
        #{refundWay,jdbcType=INTEGER},
      </if>
      <if test="moneyItem != null">
        #{moneyItem,jdbcType=INTEGER},
      </if>
      <if test="sendTime != null">
        #{sendTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="jz.cdgy.mbg.pojo.MoneyExample" resultType="java.lang.Long">
    select count(*) from t_money
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
    <update id="updateByExampleSelective" parameterType="map">
    update t_money
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.empName != null">
        emp_name = #{record.empName,jdbcType=VARCHAR},
      </if>
      <if test="record.statusId != null">
        status_id = #{record.statusId,jdbcType=INTEGER},
      </if>
      <if test="record.empMoney != null">
        emp_money = #{record.empMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.moneyDescribe != null">
        money_describe = #{record.moneyDescribe,jdbcType=VARCHAR},
      </if>
      <if test="record.refundWay != null">
        refund_way = #{record.refundWay,jdbcType=INTEGER},
      </if>
      <if test="record.moneyItem != null">
        money_item = #{record.moneyItem,jdbcType=INTEGER},
      </if>
      <if test="record.sendTime != null">
        send_time = #{record.sendTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_money
    set id = #{record.id,jdbcType=INTEGER},
      emp_name = #{record.empName,jdbcType=VARCHAR},
      status_id = #{record.statusId,jdbcType=INTEGER},
      emp_money = #{record.empMoney,jdbcType=DECIMAL},
      money_describe = #{record.moneyDescribe,jdbcType=VARCHAR},
      refund_way = #{record.refundWay,jdbcType=INTEGER},
      money_item = #{record.moneyItem,jdbcType=INTEGER},
      send_time = #{record.sendTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="jz.cdgy.mbg.pojo.Money">
    update t_money
    <set>
      <if test="empName != null">
        emp_name = #{empName,jdbcType=VARCHAR},
      </if>
      <if test="statusId != null">
        status_id = #{statusId,jdbcType=INTEGER},
      </if>
      <if test="empMoney != null">
        emp_money = #{empMoney,jdbcType=DECIMAL},
      </if>
      <if test="moneyDescribe != null">
        money_describe = #{moneyDescribe,jdbcType=VARCHAR},
      </if>
      <if test="refundWay != null">
        refund_way = #{refundWay,jdbcType=INTEGER},
      </if>
      <if test="moneyItem != null">
        money_item = #{moneyItem,jdbcType=INTEGER},
      </if>
      <if test="sendTime != null">
        send_time = #{sendTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="jz.cdgy.mbg.pojo.Money">
    update t_money
    set emp_name = #{empName,jdbcType=VARCHAR},
      status_id = #{statusId,jdbcType=INTEGER},
      emp_money = #{empMoney,jdbcType=DECIMAL},
      money_describe = #{moneyDescribe,jdbcType=VARCHAR},
      refund_way = #{refundWay,jdbcType=INTEGER},
      money_item = #{moneyItem,jdbcType=INTEGER},
      send_time = #{sendTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="getAllMoney" resultType="jz.cdgy.mbg.pojo.Money">
    select
    t_money.id, emp_name, status_id, emp_money, money_describe, refund_way, money_item, send_time,
    t_status.status_name,
    t_refund_way.refund_name,
    ifnull(t_account.account_name,'未使用账套') as 'account_name'
    from t_money
    left join t_status on t_status.id = t_money.status_id
    left join t_refund_way on t_refund_way.id = t_money.refund_way
    left join t_account on t_account.id = t_money.money_item
    <where>
      <if test="empName!=null and empName!=''">
        and t_money.emp_name like concat('%',#{empName,jdbcType=VARCHAR},'%')
      </if>
      <if test="empMoney!=null and empMoney!=''">
        and t_money.emp_money like concat('%',#{empMoney,jdbcType=VARCHAR},'%')
      </if>
      <if test="moneyDescribe!=null and moneyDescribe!=''">
        and t_money.money_describe like concat('%',#{moneyDescribe,jdbcType=VARCHAR},'%')
      </if>
      <if test="refundName!=null and refundName!=''">
        and t_money.refund_way in
        <foreach item="id" collection='refundName.split(",")' open="(" separator="," close=")">
          #{id}
        </foreach>
      </if>
      <if test="accountName!=null and accountName!=''">
        and t_money.money_item in
        <foreach item="id" collection='accountName.split(",")' open="(" separator="," close=")">
          #{id}
        </foreach>
      </if>
      <if test="statusName!=null and statusName!=''">
        and t_money.status_id in
        <foreach item="id" collection='statusName.split(",")' open="(" separator="," close=")">
          #{id}
        </foreach>
      </if>
      <if test="sendTimeStr!=null and sendTimeStr!=''">
        and  DATE_FORMAT(send_time,'%Y-%m-%d')
        between DATE_FORMAT(send_time,SUBSTRING_INDEX(#{sendTimeStr,jdbcType=VARCHAR},",",1))
        and  DATE_FORMAT(send_time,SUBSTRING_INDEX(#{sendTimeStr,jdbcType=VARCHAR},",",-1))
      </if>
    </where>
  </select>
</mapper>